<!DOCTYPE html>
<html lang="en">
<head>
    <title>Practice Timer</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- ReSharper disable All CssBrowserCompatibility -->
    <style>
        html {
            height: 100%;               /*fixed footer IE hack*/
        }

        body {
            padding: 0;
            margin: 0;
            display: flex;              /*fixed footer //ignore jslint*/
            min-height: 100vh;          /*fixed footer //ignore jslint*/
            flex-direction: column;     /*fixed footer //ignore jslint*/
        }

        #main {
            flex: 10 0 auto;            /*fixed footer //ignore jslint*/
            display: flex;              /*//ignore jslint*/
            flex-direction: column;     /*//ignore jslint*/
            align-items: center;        /*//ignore jslint*/
            justify-content: center;    /*//ignore jslint*/
        }

        header {
            height: 75px;
            background-color: brown;
            color: white;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            font-weight: bold;
            font-size: 30px;
            display: flex;              /*//ignore jslint*/
            align-items: center;        /*//ignore jslint*/
            justify-content: center;    /*//ignore jslint*/
        }

        footer {
            height: 125px;
            background-color: brown;
            color: white;
            display: flex;              /*//ignore jslint*/
            align-items: center;        /*//ignore jslint*/
            justify-content: center;    /*//ignore jslint*/
            flex-direction: column;     /*//ignore jslint*/
        }

        td {
            vertical-align: top;
        }

        #instruction {
            flex: 50 0 auto;            /*//ignore jslint*/
            overflow: auto;
            height: 0;
            margin: 5px 0 5px 5px;
            padding: 0;
        }

        #progressBar {
            width: 90%;
            background-color: silver;
            display: none;
        }

        #progress {
            width: 0;
            background-color: green;
            color: white;
            margin: 2px;
            display: flex;              /*//ignore jslint*/
            align-items: center;        /*//ignore jslint*/
            justify-content: center;    /*//ignore jslint*/
        }

        #play {
            width: 90%;
            height: 100px;
            margin: 5px;
            font-weight: bold;
        }

        .container {
            width: 100%;
        }

        .big {
            font-size: 30px;
            font-weight: bold;
        }

        .go {
            background-color: lime;
            border-radius: 5px;
        }

        .stop {
            background-color: red;
            color: white;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <header>
        Practice Timer
    </header>
    <div id="main">
        <div id="instruction">
            Download a dry practice target at <a target="_blank" href="http://www.007dev.com/Downloads/DryPracticeTarget.htm">007dev.com/Downloads</a>.<br/>
            <br />
            For all practice:<br/>
            <table>
                <tr><td>*&nbsp;</td><td>I have received proper training presenting a handgun from the holster.</td></tr>
                <tr><td>*&nbsp;</td><td>I will re-holster slowly and safely.</td></tr>
                <tr><td>*&nbsp;</td><td>I have set a goal including a short session.</td></tr>
                <tr><td>*&nbsp;</td><td>I will not practice to fatigue.</td></tr>
                <tr><td>*&nbsp;</td><td>I have control of my practice environment including distractions.</td></tr>
                <tr><td>*&nbsp;</td><td>I have established a proper mindset.</td></tr>

                <tr><td>*&nbsp;</td><td>I will treat all guns as loaded guns.</td></tr>
                <tr><td>*&nbsp;</td><td>I will never let the muzzle cover anything I am not willing to destroy.</td></tr>
                <tr><td>*&nbsp;</td><td>I will keep my finger off the trigger until my sights are on the target.</td></tr>
                <tr><td>*&nbsp;</td><td>I will be sure of my target and what is in line with and beyond it.</td></tr>
            </table>
            <br/>
            For dry practice:<br/>
            <table>
                <tr><td>*&nbsp;</td><td>I have unloaded the weapon and myself.</td></tr>
                <tr><td>*&nbsp;</td><td>I have placed all ammunition in another room.</td></tr>
                <tr><td>*&nbsp;</td><td>I have placed an appropriate target on a surface capable of stopping a bullet.</td></tr>
                <tr><td>*&nbsp;</td><td>I have performed a chamber check and mag check.</td></tr>
                <tr><td>*&nbsp;</td><td>I have said out loud, "The weapon is unloaded. I am ready for dry practice."</td></tr>
                <tr><td>*&nbsp;</td><td>When I am done, I will remove the target.</td></tr>
                <tr><td>*&nbsp;</td><td>When I am done, I will Say out loud "The weapon is considered hot. Dry practice is over."</td></tr>
                <tr><td>*&nbsp;</td><td>After I am done, I will not draw or take another shot. Dry practice is over!</td></tr>
            </table>
            <br/>
            Note:<br/>
            The app drills are optimized for 10 rounds per magazine.
        </div>
        <div id="progressBar"><button id="reset">Reset</button><div class="container"><div id="progress">&nbsp;</div></div></div>
        <button id="play">Agree</button>
    </div>
<script>
    'use strict';

    //global settings
    var schedule = [],
        t = this,
        s = 0,
        buzTime = 0,
        startBuz = new Audio("test.wav"),
        endBuz = new Audio("test.wav"),
        player = new Audio();

    function newSchedule() {
        //schedule settigns
        var drills = ["3", "3", "3", "5", "5", "5", "5", "7", "7", "7", "7", "10", "10", "10", "10", "15", "15", "15", "15"],
            tests = ["M1", "M1", "M2", "M2", "M3", "M3", "TR"], //only one tactical reload in this list will force at least one 10 round mag emergency reload
            rounds = 10,
            //vars
            firstIndex = true,
            indexes = [],
            index,
            x,
            d,
            i,
            t;

        //add each test to the schedule randomly
        schedule = drills.slice();
        s = 0;
        if (tests.lenght > (schedule.length - 2) / 2) {
            console.log("Not enugh schedule to prevent back to back tests");
        } else {
            for (d = 0; d < schedule.length; d += 1) {
                indexes.push(d);
            }
            for (t = 0; t < tests.length; t += 1) {
                firstIndex = true;

                //prevent a tactical reload from happening right after an emergency reload
                while (firstIndex || (index === 10 && tests[t] === "TR")) {
                    firstIndex = false;
                    x = Math.floor(Math.random() * indexes.length);
                    index = indexes[x];
                }
                schedule.splice(index, 0, tests[t]);

                //prevent back to back tests
                for (i = x; i < indexes.length; i += 1) {
                    indexes[i] += 1; //the insert increases the rest of the array, also effectively removing the index
                }
                x = indexes.indexOf(index - 1); //remove the index before it
                if (x !== -1) {
                    indexes.splice(x, 1);
                }
                x = indexes.indexOf(index + 1); //remove the index after it
                if (x !== -1) {
                    indexes.splice(x, 1);
                }
            }
        }

        //add the repeditive things in this order [Emergencies, After action, Holster]
        for (d = 0; d < schedule.length; d += 1) {
            rounds -= 1;

            //add emergency reloads where they would happen naturally
            if (schedule[d] === "TR") {
                rounds = 10;
            } else if (rounds < 0) {
                schedule.splice(d, 0, "ER");
                rounds = 10;
                d += 1;
            }

            //add after action drills but not before malfunctions
            if (drills.indexOf(schedule[d]) !== -1 || schedule[d] === "TR") {
                schedule.splice(d, 0, "A");
                d += 1;
            }

            //add holster requests before each drill
            if (drills.indexOf(schedule[d]) !== -1) {
                schedule.splice(d, 0, "H");
                d += 1;
            }
        }

        //i like to ensure we start with a simple drill
        schedule.splice(0, 0, "3");
        //it is a good habit to end with a tactical reload and after action drills
        schedule.splice(schedule.length, 0, "TR");
        schedule.splice(schedule.length, 0, "A");
    }

    function play() {
        var malfunction = '<div><span class="big">Type {1} malfunction.<\/span><br \/>{2}<br \/><br \/>Ready...<\/div>',
            tactical = '<div><span class="big">Tactical reload.<\/span><br \/><br \/>Ready...<\/div>',
            emergency = '<div><span class="big">Emergency reload.<\/span><br \/><br \/>Ready...<\/div>',
            after = '<div>Perform<br /><span class="big">after action drills.<\/span><\/div>',
            holser = '<div><span class="big">Safely holser<\/span><br \/>your weapon.<\/div>',
            drill = '<div>Aiming for the<br \/><span class="big">{1} meter<\/span><br \/>target. From the holster.<br \/><br \/>Ready...<\/div>';

        switch (schedule[s]) {
        case "M1":
            document.getElementById("instruction").innerHTML = malfunction.replace("{1}", "1").replace("{2}", "Failure to fire.");
            player.src = "test.wav";
            buzTime = 1000;
            break;
        case "M2":
            document.getElementById("instruction").innerHTML = malfunction.replace("{1}", "2").replace("{2}", "Failure to eject.");
            player.src = "test.wav";
            buzTime = 1000;
            break;
        case "M3":
            document.getElementById("instruction").innerHTML = malfunction.replace("{1}", "3").replace("{2}", "Failure to extract.");
            player.src = "test.wav";
            buzTime = 3000;
            break;
        case "TR":
            document.getElementById("instruction").innerHTML = tactical;
            player.src = "test.wav";
            buzTime = 2000;
            break;
        case "ER":
            document.getElementById("instruction").innerHTML = emergency;
            player.src = "test.wav";
            buzTime = 1000;
            break;
        case "A":
            document.getElementById("instruction").innerHTML = after;
            player.src = "test.wav";
            buzTime = 0;
            break;
        case "H":
            document.getElementById("instruction").innerHTML = holser;
            player.src = "test.wav";
            buzTime = 0;
            break;
        default: //drills
            document.getElementById("instruction").innerHTML = drill.replace("{1}", schedule[s]);
            player.src = "test.wav";
            buzTime = parseInt(schedule[s] * 1000, 10);
        }
        if (document.getElementById("play").innerHTML === "Pause") {
            player.play();
        }
    }

    function playNext() {
        var percent = (s / schedule.length * 100).toFixed(0);
        s += 1;

        document.getElementById("play").disabled = false;
        document.getElementById("progress").style.width = percent + "%";
        if (percent > 10) {
            document.getElementById("progress").innerHTML = percent + "%";
        } else {
            document.getElementById("progress").innerHTML = "&nbsp;";
        }

        if (s < schedule.length) {
            play();
        } else {
            document.location.reload();
        }
    }

    function playBuz() {
        if (buzTime > 0) {
            document.getElementById("play").disabled = true;
            document.getElementById("instruction").innerHTML = '<div class="go big">&nbsp; &nbsp; GO &nbsp; &nbsp;<\/Div>';
            startBuz.play();
            setTimeout(function () {
                document.getElementById("instruction").innerHTML = '<div class="stop big">&nbsp; STOP &nbsp;<\/Div>';
                endBuz.play();
            }, buzTime);
        } else {
            playNext();
        }
    }

    function start() {
        document.getElementById("progressBar").style.display = "flex";
        document.getElementById("instruction").style.display = "flex";
        document.getElementById("instruction").style["align-items"] = "center";
        document.getElementById("instruction").style["justify-content"] = "center";
        document.getElementById("instruction").style.overflow = "hidden";

        newSchedule();
        play();
    }

    //events
    player.onended = function () { playBuz(); };
    endBuz.onended = function () { playNext(); };
    document.getElementById("reset").onclick = function () { document.location.reload(); };

    document.getElementById("play").onclick = function () {
        switch (document.getElementById("play").innerHTML) {
        case "Agree":
            document.getElementById("play").innerHTML = "Pause";
            start();
            break;
        case "Play":
            document.getElementById("play").innerHTML = "Pause";
            player.play();
            break;
        case "Pause":
            document.getElementById("play").innerHTML = "Play";
            player.pause();
            break;
        default:
            console.log("bad case in play.onclick");
        }
    };
</script>
    <footer>
        Advertisements:
        <script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script> <!--//ignore jslint-->
        <!-- moble -->
        <ins class="adsbygoogle"
             style="display: inline-block; width: 320px; height: 100px"
             data-ad-client="ca-pub-1438477418297657"
             data-ad-slot="2099154125"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </footer>
</body>
</html>
